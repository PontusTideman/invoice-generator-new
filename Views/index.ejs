<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Quote Generator</title>
    <link rel="stylesheet" href="/styles.css">
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
        }
        h1 {
            color: #333;
        }
        form {
            max-width: 600px;
            margin: 0 auto;
        }
        label {
            display: block;
            margin-top: 10px;
        }
        select {
            width: 80%;
            padding: 8px;
            margin-top: 5px;
            margin-bottom: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }

        input {
            width: 80%;
            padding: 8px;
            margin-top: 5px;
            margin-bottom: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }
        .item {
            width: 80%;
            border: 1px solid #ddd;
            padding: 10px;
            margin-bottom: 10px;
            border-radius: 4px;
            display: inline-grid;
        }
        button {
            padding: 10px 20px;
            background-color: #28a745;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #218838;
        }
    </style>
</head>
<body>
    <img src="/images/company_logo.png" alt="Company Logo" style="height: 150px;">
    <h1>Qoute Generator</h1>
    <form id="invoiceForm">
        <label for="customerName">Customer Name:</label>
        <input type="text" id="customerName" name="customerName" required>

        <label for="address">Address:</label>
        <input type="text" id="address" name="address" required>

        <label for="emailAddress">Email Address:</label>
        <input type="email" id="emailAddress" name="emailAddress" required>

        <label for="phone">Phone:</label>
        <input type="text" id="phone" name="phone" required>

        <h3>Items:</h3>
        <div id="items">
            <div class="item">
                <label for="item0">Select an item:</label>
                <select id="item0" name="items[0][description]" class="item-dropdown"></select></br>
                <input type="number" name="items[0][quantity]" placeholder="Quantity" required></br>
                <input type="number" name="items[0][price]" placeholder="Price" required>
            </div>
        </div>

        <button type="button" onclick="addItem()">Add Item</button>
        <button type="submit">Generate Invoice</button>
    </form>

    <script>
        let dropdown;
        let itemCount = 1;

        // Load dropdown data from JSON
        function loadDropDown() {
            const jsonFile = 'data.json'; // Path to your JSON file
            fetch(jsonFile)
                .then(response => response.json())
                .then(data => {
                    dropdown = document.getElementById('item0');
                    data.forEach(item => {
                        const option = document.createElement('option');
                        option.value = item.name;
                        option.textContent = item.name;
                        dropdown.appendChild(option);
                    });
                })
                .catch(error => {
                    console.error('Error loading JSON file:', error);
                });
        }

        // Add a new item row
        function addItem() {
            const itemsDiv = document.getElementById('items');
            const newItem = document.createElement('div');
            newItem.classList.add('item');

            const newDropdown = dropdown.cloneNode(true);
            newDropdown.id = `item${itemCount}`;
            newDropdown.name = `items[${itemCount}][description]`;

            newItem.innerHTML = `
                <label for="${newDropdown.id}">Select an item:</label>
                ${newDropdown.outerHTML}
                <input type="number" name="items[${itemCount}][quantity]" placeholder="Quantity" required>
                <input type="number" name="items[${itemCount}][price]" placeholder="Price" required>
            `;

            itemsDiv.appendChild(newItem);
            itemCount++;
        }

        // Customer class
        class Customer {
            constructor(name, address, email, phone) {
                this.name = name;
                this.address = address;
                this.email = email;
                this.phone = phone;
            }
        }

        // Handle form submission
        document.getElementById('invoiceForm').addEventListener('submit', async (event) => {
            event.preventDefault();

            const formData = new FormData(event.target);

            // Create a Customer object
            const customer = new Customer(
                formData.get('customerName'),
                formData.get('address'),
                formData.get('emailAddress'),
                formData.get('phone')
            );

            // Collect items
            const items = [];
            for (let i = 0; i < itemCount; i++) {
                items.push({
                    description: formData.get(`items[${i}][description]`),
                    quantity: parseFloat(formData.get(`items[${i}][quantity]`)),
                    price: parseFloat(formData.get(`items[${i}][price]`))
                });
            }

            // Send data to the backend
            try {
                const response = await fetch('/generate-invoice', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ customer, items })
                });

                if (response.ok) {
                    const blob = await response.blob();
                    const url = URL.createObjectURL(blob);
                    window.open(url, '_blank'); // Open PDF in a new tab
                } else {
                    console.error('Error generating invoice');
                }
            } catch (error) {
                console.error('Error:', error);
            }
        });

        // Load dropdown on page load
        loadDropDown();
    </script>
</body>
</html>