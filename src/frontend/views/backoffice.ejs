<!DOCTYPE html>
<html lang="en" data-theme="light">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Backoffice - Invoice Generator</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdn.jsdelivr.net/npm/daisyui@4.7.2/dist/full.min.css" rel="stylesheet" type="text/css" />
</head>
<body class="min-h-screen bg-base-200">
    <div class="navbar bg-base-100 shadow-lg">
        <div class="flex-1">
            <a class="btn btn-ghost text-xl">Invoice Generator</a>
        </div>
        <div class="flex-none">
            <form action="/logout" method="POST">
                <button class="btn btn-ghost">Logout</button>
            </form>
        </div>
    </div>

    <div class="container mx-auto p-4">
        <div class="card bg-base-100 shadow-xl">
            <div class="card-body">
                <h2 class="card-title">Product Management</h2>
                <div class="overflow-x-auto">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Size</th>
                                <th>Price</th>
                                <th>Options</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% products.forEach(function(product) { %>
                                <tr>
                                    <td><%= product.name %></td>
                                    <td>
                                        <% if (product.sizes) { %>
                                            <% product.sizes.forEach(function(size) { %>
                                                <%= size.size %> (R<%= size.price %>)<br>
                                            <% }); %>
                                        <% } else { %>
                                            <%= product.size %>
                                        <% } %>
                                    </td>
                                    <td><%= product.price || '-' %></td>
                                    <td><%= product.options ? product.options.join(', ') : '-' %></td>
                                    <td>
                                        <button class="btn btn-sm btn-primary" onclick="editProduct('<%= product.name %>')">Edit</button>
                                        <button class="btn btn-sm btn-error" onclick="deleteProduct('<%= product.name %>')">Delete</button>
                                    </td>
                                </tr>
                            <% }); %>
                        </tbody>
                    </table>
                </div>
                <div class="card-actions justify-end mt-4">
                    <button class="btn btn-primary" onclick="showAddProductModal()">Add New Product</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Add/Edit Product Modal -->
    <dialog id="productModal" class="modal">
        <div class="modal-box">
            <h3 class="font-bold text-lg" id="modalTitle">Add New Product</h3>
            <form id="productForm" onsubmit="handleSubmit(event)">
                <div class="form-control">
                    <label class="label">
                        <span class="label-text">Name</span>
                    </label>
                    <input type="text" name="name" class="input input-bordered" required />
                </div>
                <div class="form-control">
                    <label class="label">
                        <span class="label-text">Size</span>
                    </label>
                    <input type="text" name="size" class="input input-bordered" />
                </div>
                <div class="form-control">
                    <label class="label">
                        <span class="label-text">Price</span>
                    </label>
                    <input type="number" name="price" class="input input-bordered" />
                </div>
                <div class="form-control">
                    <label class="label">
                        <span class="label-text">Options (comma-separated)</span>
                    </label>
                    <input type="text" name="options" class="input input-bordered" />
                </div>
                <div class="form-control">
                    <label class="label">
                        <span class="label-text">Description</span>
                    </label>
                    <textarea name="description" class="textarea textarea-bordered"></textarea>
                </div>
                <div class="modal-action">
                    <button type="submit" class="btn btn-primary">Save</button>
                    <button type="button" class="btn" onclick="closeModal()">Cancel</button>
                </div>
            </form>
        </div>
    </dialog>

    <script>
        function showAddProductModal() {
            document.getElementById('modalTitle').textContent = 'Add New Product';
            document.getElementById('productForm').reset();
            document.getElementById('productModal').showModal();
        }

        function editProduct(name) {
            document.getElementById('modalTitle').textContent = 'Edit Product';
            // TODO: Fetch product data and populate form
            document.getElementById('productModal').showModal();
        }

        function deleteProduct(name) {
            if (confirm('Are you sure you want to delete this product?')) {
                fetch(`/api/products/${encodeURIComponent(name)}`, {
                    method: 'DELETE'
                }).then(response => {
                    if (response.ok) {
                        window.location.reload();
                    }
                });
            }
        }

        function closeModal() {
            document.getElementById('productModal').close();
        }

        async function handleSubmit(event) {
            event.preventDefault();
            const form = event.target;
            const formData = new FormData(form);
            
            // Convert form data to a proper object
            const data = {
                name: formData.get('name'),
                size: formData.get('size'),
                price: formData.get('price') ? Number(formData.get('price')) : null,
                options: formData.get('options') ? formData.get('options').split(',').map(opt => opt.trim()) : [],
                description: formData.get('description')
            };

            try {
                const response = await fetch('/api/products', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(data)
                });

                if (response.ok) {
                    window.location.reload();
                } else {
                    alert('Error saving product');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Error saving product');
            }
        }
    </script>
</body>
</html> 